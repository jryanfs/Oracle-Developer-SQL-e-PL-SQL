--SELECT * FROM CONTAS_PAGAR
--SELECT * FROM CONTAS_RECEBER
--PROCEDURE INTEGRA CAP E CRE
--ORIGEM NOTA_FISCAL ENTRADA SAIDA
--SE SAIDA DESTINO CONTAS A RECEBER
--SE ENTRADA DESTINO CONTAS A PAGAR
--SEM PARAMETROS EXTERNOS, APENAS INTERNOS
--EXEC PROC_INTEGR_FIN
CREATE OR REPLACE PROCEDURE PROC_INTEGR_FIN 

IS 
    
 V_EXECP_SEM_DOCTO EXCEPTION;
 
 BEGIN 
 --ABRINDO PRIMEIRO IF
 FOR C_CONTA IN  (SELECT COUNT(*) QTD FROM NOTA_FISCAL WHERE INTEGRADA_FIN='N') LOOP
 
   IF C_CONTA.QTD=0 THEN
        RAISE V_EXECP_SEM_DOCTO;
   END IF;
   
 END LOOP;
    
   --DECLARANDO CURSOR PARA INTEGRAR PARCELAS
  
   --SELECIONANDO REGISTROS
  FOR C_FIN IN (SELECT A.COD_EMPRESA,A.TIP_NF,A.NUM_NF,B.PARC,A.ID_CLIFOR,A.COD_PAGTO,
		  A.DATA_EMISSAO,
		  A.DATA_EMISSAO+B.DIAS AS VENCIMENTO,
		  A.TOTAL_NF,
		  CAST(A.TOTAL_NF/100*B.PCT AS DECIMAL(10,2)) AS VALOR_PARC
   FROM NOTA_FISCAL A  
   INNER JOIN COND_PAGTO_DET B
     ON A.COD_PAGTO=B.COD_PAGTO
   WHERE A.INTEGRADA_FIN='N'
   ORDER BY A.COD_EMPRESA,A.NUM_NF,B.PARC) LOOP
  
  	--IF PARA INTEGRAR NOTAS DE VENDAS SAIDAS
	IF C_FIN.TIP_NF='S' THEN
	  
		INSERT INTO CONTAS_RECEBER (COD_EMPRESA,ID_DOC,ID_CLIENTE,ID_DOC_ORIG,PARC,DATA_VENC,VALOR)
        VALUES (C_FIN.COD_EMPRESA,NULL,C_FIN.ID_CLIFOR,C_FIN.NUM_NF,C_FIN.PARC,C_FIN.VENCIMENTO,C_FIN.VALOR_PARC);
		
	 
	--IF PARA INTEGRAR NOTAS DE COMPRAS ENTRADASS
	ELSIF C_FIN.TIP_NF='E' THEN
	 
        INSERT INTO CONTAS_PAGAR (COD_EMPRESA,ID_DOC,ID_FOR,ID_DOC_ORIG,PARC,DATA_VENC,VALOR)
        VALUES (C_FIN.COD_EMPRESA,NULL,C_FIN.ID_CLIFOR,C_FIN.NUM_NF,C_FIN.PARC,C_FIN.VENCIMENTO,C_FIN.VALOR_PARC);
		 		
	END IF;
    --IF PARA ATUALIZAR STATUS NA NF
	
	  --ATUALIZANDO STATUS DE NOTA FISCAL PARA INTEGRADA_FIN=S
	
    UPDATE NOTA_FISCAL SET INTEGRADA_FIN='S' WHERE NUM_NF=C_FIN.NUM_NF AND COD_EMPRESA=C_FIN.COD_EMPRESA 
    AND INTEGRADA_FIN='N' ;
	
  END LOOP;
    
    DBMS_OUTPUT.PUT_LINE('INTEGRACAO CONCLUIDA');
    COMMIT;
    
     --VALIDACOES FINAIS
EXCEPTION
    WHEN V_EXECP_SEM_DOCTO THEN
        DBMS_OUTPUT.PUT_LINE('NÃO EXISTEM DOCUMENTOS PARA INTEGRACAO!');
        ROLLBACK;
    
        
     WHEN  NO_DATA_FOUND  THEN
        DBMS_OUTPUT.PUT_LINE('NAO EXISTE DADOS!');
        ROLLBACK;
        
     WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('OUTROS CODIGO DO ERRO '||SQLCODE||' MSG '||SQLERRM);
        DBMS_OUTPUT.PUT_LINE('Linha: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
        ROLLBACK;

END; --END PROCEDURE 

--EXECUTANDO PROC
SET SERVEROUTPUT ON
EXECUTE PROC_INTEGR_FIN;

SELECT * FROM CONTAS_PAGAR;
SELECT * FROM CONTAS_RECEBER;
--DELETE FROM CONTAS_RECEBER
	