--PROCEDURE GERA PEDIDO DE COMPRAS
--PROCEDURE PARA CRIAR PEDIDO DE COMPRAS COM BASE NECESSIDADES DA ORDEM DE PRODUCAO
--PARAMETROS P_EMP P_MES P_ANO
--TABELAS ORIGEM  ORDEM_PROD
--TABELAS NECESSARIAS, FICHA_TECNICA, MATERIAL, FORNECEDORES
--TABELAS DESTINO PED_COMPRAS, PED_COMPRAS_ITEM
--TABELAS ATUALIZADA ORDEM_PROD SITUACAO DE A ABERTA PARA P PLANEJ
--DROP PROCEDURE PROC_GER_PED_COMPRAS
--EXEC PROC_GER_PED_COMPRAS 05,2017


-- CARGA PRE REQ
--CARGA MATERIAL FORNEC
--DELETE FROM MAT_FORNEC;
SELECT * FROM MAT_FORNEC;
SELECT * FROM FORNECEDORES;
SELECT * FROM MATERIAL;

INSERT INTO MAT_FORNEC VALUES (1,3,1);
INSERT INTO MAT_FORNEC VALUES (1,4,1);
INSERT INTO MAT_FORNEC VALUES (1,5,1);
INSERT INTO MAT_FORNEC VALUES (1,6,1);
INSERT INTO MAT_FORNEC VALUES (1,7,1);
INSERT INTO MAT_FORNEC VALUES (1,8,1);
INSERT INTO MAT_FORNEC VALUES (1,9,1);
INSERT INTO MAT_FORNEC VALUES (1,10,1);

INSERT INTO MAT_FORNEC VALUES (1,11,2);
INSERT INTO MAT_FORNEC VALUES (1,12,2);
INSERT INTO MAT_FORNEC VALUES (1,13,2);
INSERT INTO MAT_FORNEC VALUES (1,14,2);
INSERT INTO MAT_FORNEC VALUES (1,15,2);
INSERT INTO MAT_FORNEC VALUES (1,16,2);

--TESTE
INSERT INTO MAT_FORNEC VALUES (1,17,2);
DELETE FROM MAT_FORNEC WHERE COD_MAT='17';

ALTER TABLE MAT_FORNEC ADD FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT);

--ALTER TABLE MAT_FORNEC DROP CONSTRAINT  SYS_C007755;

ALTER TABLE PED_COMPRAS_ITENS MODIFY QTD DECIMAL(10,2);

--FIM CARGA



CREATE OR REPLACE PROCEDURE PROC_GER_PED_COMPRAS (P_EMP NUMBER,
                                                  P_MES VARCHAR2, 
                                                  P_ANO VARCHAR2) 
IS
  
  V_EXISTE_ORDEM EXCEPTION;
  --DECLARANDO VARIAVEIS
  /*
  TYPE PED     IS TABLE OF PED_COMPRAS%ROWTYPE;
  TYPE PED_IT  IS TABLE OF PED_COMPRAS_ITENS%ROWTYPE;
  TYPE OP      IS TABLE OF ORDEM_PRODUCAO%ROWTYPE;
  TYPE FT      IS TABLE OF FICHA_TECNICA%ROWTYPE;
  TYPE MAT     IS TABLE OF MATERIAL%ROWTYPE;
  TYPE MAT_FOR IS TABLE OF MAT_FORNEC%ROWTYPE;
  TYPE FORNEC IS TABLE OF FORNECEDORES%ROWTYPE; 
  */
  
  --REFERENCIANDO
  /*
  T_PED PED;
  T_PED_IT PED_IT;
  T_OP OP;
  T_FT FT;
  T_MAT MAT;
  T_FOR_MAT MAT_FOR;
  T_FOR FORNEC;
  */
  
   NUM_PEDIDO_AUX NUMBER;
   V_NUM_PEDIDO  NUMBER;
  --DECLARANDO VARIAVEIS AUXILIARES
   V_CONT_ORD NUMBER;
  --MES_AUX VARCHAR2(2);
  --ANO_AUX VARCHAR2(4);
   P_MES_AUX VARCHAR2(2);
   P_ANO_AUX VARCHAR2(4);
   CONT_SEQ NUMBER;
   V_TOTAL_PED NUMBER(10,2);
 
 BEGIN 

   V_TOTAL_PED:=0;
-- P_MES='01'
-- P_ANO='2017'
--VERIFICACAO SE MES JANEIRO MES=12 E ANO-1
--SENAO MES-1

  IF (P_MES='01')
	THEN
		P_MES_AUX:=12;
		P_ANO_AUX:=P_ANO-1;
    ELSE  
	   P_MES_AUX:=P_MES_AUX-1;
    END IF;
--VERIFICANDO SE EXISTEM ORDEM PARA PLANEJ
   SELECT COUNT(*) INTO V_CONT_ORD FROM ORDEM_PROD A
        WHERE TO_CHAR(A.DATA_INI,'MM')=P_MES
		AND TO_CHAR(A.DATA_INI,'YYYY')=P_ANO
        AND A.COD_EMPRESA=P_EMP
		AND A.SITUACAO='A';
      --SE NAO EXISTEM ORDEM RAISE  V_EXISTE_ORDEM
      IF V_CONT_ORD =0 THEN
       
        RAISE V_EXISTE_ORDEM;
	
      ELSE 
             P_MES_AUX:=P_MES;
             P_ANO_AUX:=P_ANO;
             CONT_SEQ:=1;
             V_NUM_PEDIDO:=0;
             NUM_PEDIDO_AUX:=0;
     END IF;

--CURSOR PARA GRAVAR CABECALHO PEDIDO DE COMPRAS
--SELECT PARA GERAR NECESSIDADES DE COMPRAS CONFORME ORDEM DE PRODUCAO
--CONFORME FICHA TENICA  E PRODUTO COM SEU FORNECEDOR
-- CURSOR IMPLICITO PRIMEIRO CURSOR

FOR C_FORNEC IN (SELECT distinct A.COD_EMPRESA,D.ID_FOR,E.COD_PAGTO,
      '15/'||P_MES_AUX||'/'||P_ANO_AUX AS DATA_PEDIDO,
      '15/'||P_MES||'/'||P_ANO  AS DATA_ENTREGA,
	'A' SITUACAO
	FROM ORDEM_PROD A
	INNER JOIN FICHA_TECNICA B
	ON A.COD_MAT_PROD=B.COD_MAT_PROD
    AND A.COD_EMPRESA=B.COD_EMPRESA
    
	INNER JOIN MATERIAL C
	ON B.COD_MAT_NECES=C.COD_MAT
    AND A.COD_EMPRESA=C.COD_EMPRESA
    
	INNER JOIN MAT_FORNEC D
	ON C.COD_MAT=D.COD_MAT
    AND A.COD_EMPRESA=D.COD_EMPRESA
    
    INNER JOIN FORNECEDORES E
    ON A.COD_EMPRESA=E.COD_EMPRESA
    AND D.ID_FOR=E.ID_FOR
    
	WHERE TO_CHAR(A.DATA_INI,'MM')=P_MES  --PARAM MES
	AND TO_CHAR(A.DATA_INI,'YYYY')=P_ANO  --PARAM ANO
    AND A.COD_EMPRESA=P_EMP               --PARAM EMPRESA
	AND A.SITUACAO='A')  LOOP
    	
	--INSERT NA TABELA COMPRAS CABEBECALHO
	
	 INSERT INTO PED_COMPRAS (COD_EMPRESA,ID_FOR,COD_PAGTO,DATA_PEDIDO,DATA_ENTREGA,SITUACAO)
	 VALUES (C_FORNEC.COD_EMPRESA,C_FORNEC.ID_FOR,C_FORNEC.COD_PAGTO,C_FORNEC.DATA_PEDIDO,C_FORNEC.DATA_ENTREGA,C_FORNEC.SITUACAO)
     RETURNING NUM_PEDIDO INTO NUM_PEDIDO_AUX; --PEGANDO VALOR DO PEDIDO INSERIDO E ATRIBUINDO VALOR
    
    --APRESENTANDO VALORES
	 DBMS_OUTPUT.PUT_LINE('NUM Ped: '||NUM_PEDIDO_AUX||' Fornec: '||C_FORNEC.ID_FOR||' Cod Pagto: '||
     C_FORNEC.COD_PAGTO||' DATA PED: '||C_FORNEC.DATA_PEDIDO||' DATA ENTR: '||C_FORNEC.DATA_ENTREGA||' SITUA: '||
     C_FORNEC.SITUACAO);
    
    	--CURSOR DETALHE PED IT INICIO
	--SELECT COM PARAMETROS SEGUNFO CURSOR E LOOP
  FOR  PED_IT IN (SELECT A.COD_EMPRESA,B.COD_MAT_NECES COD_MAT,D.ID_FOR,
       SUM(B.QTD_NECES*A.QTD_PLAN) QTD,C.PRECO_UNIT
		FROM ORDEM_PROD A
		INNER JOIN FICHA_TECNICA B
        ON A.COD_MAT_PROD=B.COD_MAT_PROD
        AND A.COD_EMPRESA=B.COD_EMPRESA
        
		INNER JOIN MATERIAL C
		ON B.COD_MAT_NECES=C.COD_MAT
        AND A.COD_EMPRESA=C.COD_EMPRESA
        
        INNER JOIN MAT_FORNEC D
        ON D.COD_MAT=B.COD_MAT_NECES
        AND A.COD_EMPRESA=D.COD_EMPRESA
        
		INNER JOIN FORNECEDORES E
		ON D.ID_FOR=E.ID_FOR
        AND A.COD_EMPRESA=E.COD_EMPRESA
        
		WHERE TO_CHAR(A.DATA_INI,'MM')=P_MES --PAPRAM MES
		AND TO_CHAR(A.DATA_INI,'YYYY')=P_ANO --PARAM ANO
        AND A.COD_EMPRESA=P_EMP --PARAM EMPRESA
		AND A.SITUACAO='A' --ABERTA
		AND D.ID_FOR=C_FORNEC.ID_FOR --PARAM PARA FORNECEDOR DO CURSOR 1
		GROUP BY A.COD_EMPRESA,B.COD_MAT_NECES,D.ID_FOR,C.PRECO_UNIT
        ORDER BY B.COD_MAT_NECES) LOOP

	  --VERIFICACOES PARA CONTADOR DE SEQ MATERIAL E TOTAL_PED
	  IF (V_NUM_PEDIDO<>NUM_PEDIDO_AUX) THEN
	 
	   CONT_SEQ:=1;
	   V_TOTAL_PED:=0;  
	  END IF;
      
	    --INSERINDO REGISTRO NA PED_COMPRAS_ITENS
		
		INSERT INTO PED_COMPRAS_ITENS VALUES 
		(PED_IT.COD_EMPRESA,NUM_PEDIDO_AUX,CONT_SEQ,PED_IT.COD_MAT,PED_IT.QTD,PED_IT.PRECO_UNIT);
		--APRESENTANDO VALORES
		DBMS_OUTPUT.PUT_LINE('Cod Mat: '||PED_IT.COD_MAT||' Seq: '||CONT_SEQ||' COD MAT: '||PED_IT.COD_MAT||' QTD: '||PED_IT.QTD||' PRECO_UNIT: '||PED_IT.PRECO_UNIT);
		
        --ATRIBUINDO VALORES
		
		V_NUM_PEDIDO:=NUM_PEDIDO_AUX;
		CONT_SEQ:=CONT_SEQ+1;
		V_TOTAL_PED:=V_TOTAL_PED+(PED_IT.QTD*PED_IT.PRECO_UNIT);
        
          DBMS_OUTPUT.PUT_LINE('Pedido '||V_NUM_PEDIDO||' Total Pedido: '||V_TOTAL_PED);

    END LOOP; --FIM CURSOR C_FORNEC SEGUNDO CURSOR CURSO 
        
     --ATUALIZANDO TOTAL PEDIDO
  UPDATE PED_COMPRAS SET TOTAL_PED=V_TOTAL_PED
  WHERE NUM_PEDIDO=V_NUM_PEDIDO
  AND COD_EMPRESA=P_EMP;
  
  DBMS_OUTPUT.PUT_LINE('Pedido '||V_NUM_PEDIDO||' Total Pedido: '||V_TOTAL_PED);

  --ATRIBUINDO VARIAVEIS
  V_NUM_PEDIDO:=NUM_PEDIDO_AUX;
    
    END LOOP ; --FIM CURSOR C_FORNEC PRIMEIRO CURSO
	
            --ATUALIZA ORDENS
			UPDATE  ORDEM_PROD SET SITUACAO='P'
			WHERE TO_CHAR(DATA_INI,'MM')=P_MES
			AND TO_CHAR(DATA_INI,'YYYY')=P_ANO
			AND SITUACAO='A'
            AND COD_EMPRESA=P_EMP;
		 
    	
		    dbms_output.put_line('OPERACAO FINALIZADA COM SUCESSO');
			COMMIT;


EXCEPTION
 WHEN   V_EXISTE_ORDEM  THEN
      DBMS_OUTPUT.PUT_LINE('ATENÇÃO! NÃO EXISTEM OP PARA ESTA OPERACAO!');
      
  WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('OCORREU UM ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);

END;



--EXECUTANDO 
--PARAMENTRE EMPRESA, MES,ANO

SET SERVEROUTPUT ON
EXECUTE PROC_GER_PED_COMPRAS (1,'03','2018');


--VERIFICANDO
SELECT * FROM ORDEM_PROD;
SELECT * FROM PED_COMPRAS;
SELECT * FROM PED_COMPRAS_ITENS
SELECT * FROM FICHA_TECNICA;
--PED 5 46687,5
--PED 6 131625
--SELECT cast(qtd as decimal(10,2)) FROM PED_COMPRAS_ITENS;
--VERIFICANDO SOMA
SELECT COD_EMPRESA, NUM_PEDIDO, SUM(CAST(QTD*VAL_UNIT AS DECIMAL(10,2))) TOTAL
FROM PED_COMPRAS_ITENS
WHERE COD_EMPRESA=1
GROUP BY COD_EMPRESA, NUM_PEDIDO;


/*
DELETE FROM PED_COMPRAS_ITENS;
DELETE FROM PED_COMPRAS;
UPDATE  ORDEM_PROD SET SITUACAO='A'
			WHERE SITUACAO='P'
            AND COD_EMPRESA=1;
